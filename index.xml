<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marco Spaziani Brunella</title>
    <link>https://marcospazianibrunella.github.io/</link>
    <description>Recent content on Marco Spaziani Brunella</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://marcospazianibrunella.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DERA</title>
      <link>https://marcospazianibrunella.github.io/portfolio/dera/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marcospazianibrunella.github.io/portfolio/dera/</guid>
      <description>This is a Java reference implementation of dynamic event-driven actors runtime aiming at providing adequate abstraction levels and mechanisms for modelling and developing (distributed) event-based systems. DERA leverages the intrinsic loose coupling of event-driven communication styles to support various kinds of run-time evolution and adaptation (i.e., enabling run-time flexibility) while minimizing the non-deterministic nature of traditional event-based applications (i.e., supporting formal analysis).</description>
    </item>
    
    <item>
      <title>hyde-hyde</title>
      <link>https://marcospazianibrunella.github.io/portfolio/hyde-hyde/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marcospazianibrunella.github.io/portfolio/hyde-hyde/</guid>
      <description>Hyde-hyde is a responsive Hugo theme inspired by @spf13&amp;rsquo;s Hyde and its variant Nate Finch&amp;rsquo;s blog. It was heavily restructured with modularised page layouts for easier maintenance and modification. Hyde-hyde offers awesome features such as nice colour tone, code highlighting, Font-Awesome 5&amp;rsquo;s sidebar icons), a cool portfolio page, more choices for commenting (e.g. GraphComment, Disqus).</description>
    </item>
    
    <item>
      <title>LaraMod</title>
      <link>https://marcospazianibrunella.github.io/portfolio/laramod/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marcospazianibrunella.github.io/portfolio/laramod/</guid>
      <description>LaraMod is another modularisation effort to systematically organising a Laravel based project. The idea stems from my struggle to structure a Laravel-based project so that I can work effectively on individual modules whilst keeping Laravel codebase intact as much as possible and also keeping the project&amp;rsquo;s codebase separate from Laravel.</description>
    </item>
    
    <item>
      <title>DPDK Quick Reference</title>
      <link>https://marcospazianibrunella.github.io/posts/dpdk-quick-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://marcospazianibrunella.github.io/posts/dpdk-quick-reference/</guid>
      <description>Compile the igb_uio DPDK driver Suppose install_dir is /opt:
$ sudo -s $ cd /opt/dpdk-19.05 $ make config T=x86_64-native-linuxapp-gcc $ make install T=x86_64-native-linuxapp-gcc -j 8 Insert the igb_uio DPDK driver $ sudo -s $ cd /opt/dpdk-19.05/x86_64-native-linuxapp-gcc $ modprobe uio $ insmod kmod/igb_uio.ko Bind interfaces to DPDK $ /usr/local/sbin/dpdk-devbind -s #List all available interfaces and status Network devices using DPDK-compatible driver ============================================ 0000:81:00.1 &#39;Ethernet 10G 2P X520 Adapter 154d&#39; drv=igb_uio unused=ixgbe Network devices using kernel driver =================================== 0000:01:00.</description>
    </item>
    
    <item>
      <title>System Design Papers Guidelines</title>
      <link>https://marcospazianibrunella.github.io/posts/systems-paper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://marcospazianibrunella.github.io/posts/systems-paper/</guid>
      <description>Mostly from tweets of Vijay Chidambaram
General  The most important aspect is problem selection. The problem has to be timely and significant. By reading a lot of SOSP/OSDI papers, you develop a sense of whether a given problem is significant enough. If you tackle the “wrong” problem, paper won’t get accepted no matter what. Building a real system (to the point it can run actual user workloads). It is rare to have SOSP or OSDI papers based on simulation.</description>
    </item>
    
    <item>
      <title>Teaching</title>
      <link>https://marcospazianibrunella.github.io/teaching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://marcospazianibrunella.github.io/teaching/</guid>
      <description>Active   Network Infrastructures Labs. University of Rome La Sapienza. Basic and Advanced Network Administration under Linux using Kathara [Course site]
  ICT Security. University of Rome Tor Vergata. Basics of Computer Organization &amp;amp; Design and introduction to microarchitectural side-channel attacks.
  </description>
    </item>
    
  </channel>
</rss>
